cmake_minimum_required(VERSION 4.0)
include(cmake/ToolChain.cmake)

project(modelbahn CXX C)
add_library(project_options INTERFACE)

# Generate compile_commands.json to make it easier to work with clang based tools
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

set(ENABLE_CPPCHECK ON)
set(ENABLE_MODM_CHECK_EXCLUDE ON)


# Colors is unsupported vscode, can also be turend off in cmake/StandardProjectSettings.cmake
target_compile_options(project_options INTERFACE -fdiagnostics-color=never)

add_library(project_warnings INTERFACE)
# include(cmake/Cache.cmake)

include(cmake/CompilerWarnings.cmake)
set_project_warnings(project_warnings)

# include(cmake/Doxygen.cmake)
# enable_doxygen()
include(cmake/StaticAnalyzers.cmake)

option(ENABLE_IPO "Enable Interprocedural Optimization, aka Link Time Optimization (LTO)" OFF)
if(ENABLE_IPO)
  set(CMAKE_INTERPROCEDURAL_OPTIMIZATION TRUE)
endif()

option(ENABLE_PCH "Enable Precompiled Headers" OFF)
if(ENABLE_PCH)
  target_precompile_headers(
    project_options
    INTERFACE
    <vector>  # Insert preferred headers
    <string>
    <map>
    <utility>)
endif()

add_subdirectory(modm)
add_subdirectory(app)